

# find all .frag and .vert files in the shaders/source directory
file(GLOB SHADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/source/*_frag.glsl" "${CMAKE_CURRENT_SOURCE_DIR}/source/*_vert.glsl")

# create a list to hold the output SPIR-V files
set(SPIRV_FILES)

# loop through each shader file and add a custom command to compile it
foreach(SHADER_FILE ${SHADER_FILES})
    message(STATUS "Found shader file: ${SHADER_FILE}")
    get_filename_component(FILE_BASE_NAME ${SHADER_FILE} NAME_WE)

    # determine shader stage based on file name
    if(${FILE_BASE_NAME} MATCHES "_frag")
        set(STAGE "fragment")
    elseif(${FILE_BASE_NAME} MATCHES "_vert")
        set(STAGE "vertex")
    else()
        message(WARNING "Unknown shader type for ${SHADER_FILE}")
        set(STAGE "unknown")
    endif()


    # set the output SPIR-V file path
    set(SPIRV_FILE "${CMAKE_CURRENT_SOURCE_DIR}/compiled/${FILE_BASE_NAME}.spv")
    
    # append the SPIRV_FILE to the SPIRV_FILES list
    list(APPEND SPIRV_FILES ${SPIRV_FILE})

    # add a custom command to compile the shader file
    add_custom_command(
        OUTPUT ${SPIRV_FILE}
        COMMAND ${Vulkan_GLSLC_EXECUTABLE} -fshader-stage=${STAGE} ${SHADER_FILE} -o ${SPIRV_FILE}
        DEPENDS ${SHADER_FILE}
        COMMENT "Compiling ${SHADER_FILE} to ${SPIRV_FILE}"
        VERBATIM
    )

endforeach()

# add a custom target to compile all shaders
add_custom_target(compile_shaders ALL DEPENDS ${SPIRV_FILES})